@use 'sass:string';
@use "sass:meta";

@function horizontalTransform($current-size) {
  @return string.unquote('translateX(#{$current-size})');
}

@function verticalTransform($current-size) {
  @return string.unquote('translateY(#{$current-size})');
}

@function leftToRightTransform($current-size) {
  @return string.unquote('translate(#{$current-size}, #{$current-size})');
}

@function rightToLeftTransform($current-size) {
  @return string.unquote('translate(-#{$current-size}, #{$current-size})');
}

.lines-increasing-info {
  @mixin increasing-info-keyframes($keyframes-name, $func, $length, $current-square-size) {
    @keyframes #{$keyframes-name} {
      @for $i from 0 through $length - 1 {
        #{$i * 100% / ($length - 1)} {
          transform: meta.call(get-function($func), $current-square-size * $i);
          opacity: 1 - $i * (1 / ($length - 1));
        }
      }
    }
  }

  @mixin increasing-info-animation($animation-name, $func, $length) {
    $keyframes-name: increasing-info-#{$animation-name}-#{$length};
    $keyframes-name-small: increasing-info-#{$animation-name}-#{$length}-small;
    $animation-duration: 750ms;
    $animation-func: ease-out;

    @include increasing-info-keyframes($keyframes-name, $func, $length, $square-size);
    @include increasing-info-keyframes($keyframes-name-small, $func, $length, $square-size-small);

    animation: $keyframes-name $animation-duration $animation-func;

    @include lines-mq-medium-down {
      animation: $keyframes-name-small $animation-duration $animation-func;
    }
  }

  @mixin increasing-info {
    content: attr(data-increasing-info);
    color: $blue;
    position: absolute;
    top: 0;
    left: 0;
    font-size: 1.25rem;
    line-height: 1.25rem;
  }

  $line-types: (
    'horizontal': horizontalTransform,
    'vertical': verticalTransform,
    'left-to-right-top': leftToRightTransform,
    'left-to-right-bottom': leftToRightTransform,
    'right-to-left-top': rightToLeftTransform,
    'right-to-left-bottom': rightToLeftTransform,
  );

  @each $color-name, $color in $colors {
    @each $line-type-name, $func in $line-types {
      @for $i from 5 through 10 {
        &_#{$line-type-name}_#{$color-name}_#{$i} {
          @include increasing-info;
          @include increasing-info-animation($line-type-name, $func, $i);
          color: $color;
        }
      }
    }
  }
}
